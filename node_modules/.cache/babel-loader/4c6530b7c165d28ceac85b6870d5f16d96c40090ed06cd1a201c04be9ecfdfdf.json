{"ast":null,"code":"var _jsxFileName = \"/Users/asherspurr/mod3-git/t4t-p/src/Components/landing/Landing.js\";\nimport './Landing.css';\nimport { useState } from 'react';\nimport Search from '../search/Search';\nimport Filter from '../filter/Filter';\nimport Locations from '../locations/Locations';\nimport { fetchBRsByLoc } from '../../apiCalls';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Landing = ({\n  updateLocs,\n  locs\n}) => {\n  //Handle fetch of actual bathrooms here\n  //use updateLocs in Landing\n\n  async function handleBRsByLoc(lat, lon, ada, unisex) {\n    try {\n      const locations = await fetchBRsByLoc(lat, lon, ada, unisex);\n      updateLocs(locations);\n    } catch (error) {\n      throw error;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleBRsByLoc: handleBRsByLoc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Locations, {\n      locs: locs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["useState","Search","Filter","Locations","fetchBRsByLoc","jsxDEV","_jsxDEV","Fragment","_Fragment","Landing","updateLocs","locs","handleBRsByLoc","lat","lon","ada","unisex","locations","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/asherspurr/mod3-git/t4t-p/src/Components/landing/Landing.js"],"sourcesContent":["import './Landing.css';\nimport { useState } from 'react'\nimport Search from '../search/Search'\nimport Filter from '../filter/Filter'\nimport Locations from '../locations/Locations'\nimport { fetchBRsByLoc } from '../../apiCalls';\n\nconst Landing = ({ updateLocs, locs }) => {\n    //Handle fetch of actual bathrooms here\n    //use updateLocs in Landing\n\n    async function handleBRsByLoc(lat, lon, ada, unisex ) {\n        try {\n            const locations = await fetchBRsByLoc(lat, lon, ada, unisex)\n            updateLocs(locations)\n        } catch(error) {\n            throw error\n        }\n    }\n    return (\n        <>\n        {/* handle coordinates fetch in search\n        use the return to fire the fetch in here to fetch bathrooms */}\n            <Search handleBRsByLoc={handleBRsByLoc}/>\n            <Filter />\n            <Locations locs={locs}/>\n        </>\n    )\n}\n\nexport default Landing"],"mappings":";AAAA,OAAO,eAAe;AACtB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAK,CAAC,KAAK;EACtC;EACA;;EAEA,eAAeC,cAAcA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAG;IAClD,IAAI;MACA,MAAMC,SAAS,GAAG,MAAMb,aAAa,CAACS,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,CAAC;MAC5DN,UAAU,CAACO,SAAS,CAAC;IACzB,CAAC,CAAC,OAAMC,KAAK,EAAE;MACX,MAAMA,KAAK;IACf;EACJ;EACA,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBAGIb,OAAA,CAACL,MAAM;MAACW,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzCjB,OAAA,CAACJ,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA,CAACH,SAAS;MAACQ,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC1B,CAAC;AAEX,CAAC;AAAAC,EAAA,GArBKf,OAAO;AAuBb,eAAeA,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}