{"ast":null,"code":"var _jsxFileName = \"/Users/asherspurr/mod3-git/t4t-p/src/Components/search/Search.js\",\n  _s = $RefreshSig$();\nimport './Search.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  handleBRsByLoc\n}) => {\n  _s();\n  //Use google api to fetch -> then set state based off that fetch\n  const [lat, setLat] = useState();\n  const [lon, setLon] = useState();\n  //Convert to integers\n\n  console.log(typeof lon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search_div_container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Search_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Search_input\",\n        id: \"Search_lat_input\",\n        type: \"text\",\n        placeholder: \"Latitude\",\n        name: \"lat\",\n        value: lat,\n        onChange: e => setLat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Search_input\",\n        id: \"Search_lon_input\",\n        type: \"text\",\n        placeholder: \"Longitude\",\n        name: \"lon\",\n        value: lon,\n        onChange: e => setLon(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Search_button\",\n        type: \"submit\",\n        value: \"submit\",\n        onSubmit: setLatLonState(lat, lon),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"Y2JmIuvwspNPVKAyb+RcJGIr6o4=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Search","handleBRsByLoc","_s","lat","setLat","lon","setLon","console","log","className","children","id","type","placeholder","name","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","setLatLonState","_c","$RefreshReg$"],"sources":["/Users/asherspurr/mod3-git/t4t-p/src/Components/search/Search.js"],"sourcesContent":["import './Search.css';\nimport { useState } from 'react'\nimport { useEffect } from 'react';\n\n\n\nconst Search = ({ handleBRsByLoc}) => {\n    //Use google api to fetch -> then set state based off that fetch\n    const [lat, setLat] = useState()\n    const [lon, setLon] = useState()\n    //Convert to integers\n\n    console.log(typeof(lon))\n\n    return (\n        <div className='Search_div_container'>\n            <form className='Search_form'>\n                <input className='Search_input' id='Search_lat_input' type='text' placeholder='Latitude'  name='lat' value={lat} onChange={(e) => setLat(e.target.value)}></input>\n                <input className='Search_input' id='Search_lon_input' type='text' placeholder='Longitude'  name='lon' value={lon} onChange={(e) => setLon(e.target.value)}></input>\n                <button className='Search_button' type='submit' value='submit' onSubmit={setLatLonState(lat, lon)}>Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAChC;;EAEAW,OAAO,CAACC,GAAG,CAAC,OAAOH,GAAI,CAAC;EAExB,oBACIN,OAAA;IAAKU,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjCX,OAAA;MAAMU,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACzBX,OAAA;QAAOU,SAAS,EAAC,cAAc;QAACE,EAAE,EAAC,kBAAkB;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAAEC,IAAI,EAAC,KAAK;QAACC,KAAK,EAAEZ,GAAI;QAACa,QAAQ,EAAGC,CAAC,IAAKb,MAAM,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClKvB,OAAA;QAAOU,SAAS,EAAC,cAAc;QAACE,EAAE,EAAC,kBAAkB;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,WAAW;QAAEC,IAAI,EAAC,KAAK;QAACC,KAAK,EAAEV,GAAI;QAACW,QAAQ,EAAGC,CAAC,IAAKX,MAAM,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnKvB,OAAA;QAAQU,SAAS,EAAC,eAAe;QAACG,IAAI,EAAC,QAAQ;QAACG,KAAK,EAAC,QAAQ;QAACQ,QAAQ,EAAEC,cAAc,CAACrB,GAAG,EAAEE,GAAG,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAApB,EAAA,CAjBKF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAmBZ,eAAeA,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}